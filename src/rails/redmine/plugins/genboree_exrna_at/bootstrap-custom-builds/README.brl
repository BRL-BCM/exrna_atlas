###################################################################
# Custom bootstrap Builds
#
# - To remove unnecessary sources of conflicts in bootstrap styles and your own.
#   . e.g. bootstraps weird rules for .row, .cell, .table are messing with your
#     clean and simple ones. And you like .row .cell .table classes
# - To remove very poor bootstrap print-device (@media print) CSS styling for print
#   devices that are ruining printing of your nice page...you want it to look like the
#   screen!
# - To make lighter weight bootstrap css and js. Faster. Less likely to conflict.
#   . Why include the whole kitchen sink when you just want 1-2 key features?
# - BUT you want to use certain things from bootstrap.
###################################################################

# ------------------------------------------------------------------
# Instructions for compiling custom bootstrap for your plugin
# ------------------------------------------------------------------

1. Configure & download your bootstrap here:
    http://getbootstrap.com/customize/

2. Come up with a descriptive name for your custom bootstrap build.
   * E.g. bootstrap-glyph-tips-dialogs
   * Make an env variable for it, to aid with steps below:

      export BS_NAME=bootstrap-glyph-tips-dialogs

3. Create a directory ./plugins/{plugin}/bootstrap-custom-builds/$BS_NAME/

4. Unpack the downloaded custom archive to ./plugins/{plugin}/bootstrap-custom-builds/$BS_NAME/

    4.1. Add in font-awesome [always] to your custom-bootstrap package.
      4.1.1  Place the font-files in with existing bootstrap fonts/ [should always have glyphicons in
             your custom bootstrap].
      4.1.2  The fixes applied in (5.a) and (5.2) below will tweak font-awesome files also, if needed.
      4.1.3  SHORTCUT: font-awesome should be in your custom bootstrap package and checked into SVN.
             *But* an easy way to get it is to copy the files from a previous custom bootstrap area
             in your plugin or in a sibling plugin.

5. Prep the .css files to be Rails asset-pipeline compatible. Go to your unpacked directory now.

    5.1. Fix the relative ../fonts paths in the css; we put the fonts in with the css so no path needed:
            find ./css -type f -name "*.css" -exec sed -i -e "s/\.\.\/fonts\///g" {} \;

    5.2. Rename the core bootstrap files since various app/views/ etc in the plugin may need
        different bootstrap features. This is expected when there are multiple Sencha "apps"/page-uis.
            # css files
            for xx in `find ./css -type f -name "bootstrap*.css"`
            do
              yy=`echo $xx | sed -re "s/\bbootstrap/$BS_NAME/"`
            mv $xx $yy
            done
            # js files
            for xx in `find ./js -type f -name "bootstrap*.js"`
            do
              yy=`echo $xx | sed -re "s/\bbootstrap/$BS_NAME/"`
              mv $xx $yy
            done

6. Copy assets into place within your plugin's SVN working assets/ directories. This is generally a one-time thing.

    6.1. First most css & js files--now with unique names (no collisions with other custom bootstraps) to
        your plugin's respective assets subdir:
            cp css/*css ../../assets/stylesheets/
            cp js/*js ../../assets/javascripts/

    6.2. Copy the files in fonts/ to the assets/stylesheets/. Rails doesn't natively know about assets/fonts/.
        By putting them in with the .css files and making the change in (5.1) above, the fonts are found in
        the same dir as the stylesheets.

            cp -R fonts/* ../../assets/stylesheets/

7. Load the .js and .css into your Rails views as normal (using Rails methods). You will use your new
   unique and descriptive file names. For example:

    <%= javascript_include_tag 'bootstrap-glyph-tips-dialogs.js', :plugin => 'genboree_ac' %>
    <%= stylesheet_link_tag 'bootstrap-glyph-tips-dialogs.css', :plugin => 'genboree_ac', :media => 'all' %>

  - IMPORTANT: Don't forget the :media=>'all' else Rails' default media (screen) will mean your styles aren't
    applied when printing, oh no!
    
8. Don't forget to add everything (dirs included, copied asset files included) to SVN!
    - You can remove the bootstrap.zip and not check it in (waste of space)
    - You should KEEP the config.json
      . It has a unique URL at the bottom that points to your custom configuration at getbootstrap.com
